name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      # Set up MSYS2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw64/mingw-w64-x86_64-qt5-static
      
      # Install 7-Zip
      - name: Install 7-Zip
        run: choco install 7zip -y

      # Download and extract OpenSSL binaries
      - name: Download and extract OpenSSL
        run: |
          curl -L -o OpenSSL_mingw_build.rar https://www.eliboa.com/OpenSSL_mingw_build.rar
          mkdir -p OpenSSL
          7z x OpenSSL_mingw_build.rar -oOpenSSL

      # Set OpenSSL Paths
      - name: Configure OpenSSL
        shell: bash
        run: |
          export OPENSSL_DIR=$(pwd)/OpenSSL/OpenSSL_mingw32
          echo "OPENSSL_DIR=$OPENSSL_DIR" >> $GITHUB_ENV

      # Patch the Makefile
      - name: Patch Makefile
        shell: bash
        run: |
          OPENSSL_DIR=$(pwd)/OpenSSL/OpenSSL_mingw32
          sed -i "s|^INCLUDES=.*|INCLUDES=-Ivirtual_fs/dokan/include -I$OPENSSL_DIR/include|g" Makefile
          sed -i "s|^LIBS=.*|LIBS=-static -L$OPENSSL_DIR/lib -lcrypto -lssl -lwsock32 -lws2_32 -Lvirtual_fs/dokan/x86/lib -ldokan1|g" Makefile

      # Build the project
      - name: Build
        shell: msys2 {0}
        run: |
          make clean
          make -j"$(nproc)"
          mkdir -p $GITHUB_WORKSPACE/bin
          cp NxNandManager.exe $GITHUB_WORKSPACE/bin
          cp virtual_fs/dokan/x64/dokan1.dll $GITHUB_WORKSPACE/bin

      # Upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: NxNandManager
          path: bin/*
