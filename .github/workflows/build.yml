name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      # Set up MSYS2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw64/mingw-w64-x86_64-qt5-static
      
      # Install 7-Zip
      - name: Install 7-Zip
        run: choco install 7zip -y

      # Download and extract OpenSSL binaries to the expected directory
      - name: Download and extract OpenSSL
        run: |
          curl -L -o OpenSSL_mingw_build.rar https://www.eliboa.com/OpenSSL_mingw_build.rar
          mkdir -p OpenSSL/OpenSSL_mingw64
          7z x OpenSSL_mingw_build.rar -oOpenSSL/tmp
          mv OpenSSL/tmp/OpenSSL_mingw32/* OpenSSL/OpenSSL_mingw64/

      # Build the project with explicit OpenSSL paths
      - name: Build
        shell: msys2 {0}
        run: |
          ln -s $(pwd) ~/NxNandManager
          cd ~/NxNandManager/NxNandManager/gui
          /mingw64/qt5-static/bin/qmake.exe NxNandManager.pro \
            "CONFIG += STATIC ARCH64" \
            "INCLUDEPATH += $(pwd)/OpenSSL/OpenSSL_mingw64/include" \
            "LIBS += -L$(pwd)/OpenSSL/OpenSSL_mingw64/lib -lssl -lcrypto"
          make -f Makefile.Release -j"$(nproc)"
          mkdir -p $GITHUB_WORKSPACE/bin
          cp release/NxNandManager.exe $GITHUB_WORKSPACE/bin
          cp ../virtual_fs/dokan/x64/dokan1.dll $GITHUB_WORKSPACE/bin

      # Upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: NxNandManager
          path: bin/*
